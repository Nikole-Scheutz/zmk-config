/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

/* Uncomment this block if using RGB
&led_strip {
    chain-length = <6>;
    // chain-length = <35>; // Uncomment if using both per-key and underglow LEDs
    // chain-length = <29>; // Uncomment if using only per-key LEDs.
};
 */

&mt {
    flavor = "tap-preferred";
    require-prior-idle-ms = <150>;
    tapping-term-ms = <225>;
};

&left_encoder { resolution = <18>; };
&right_encoder { resolution = <18>; };

/ {
    behaviors {
        shift_mod_tap: shift_mod_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFT_MOD_TAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <175>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <50>;
        };
    };

    combos {
        compatible = "zmk,combos";

        minus_combo {
            bindings = <&kp MINUS>;
            key-positions = <16 19>;
        };

        esc_combo {
            bindings = <&kp ESCAPE>;
            key-positions = <25 34>;
        };

        underscore_combo {
            bindings = <&kp UNDER>;
            key-positions = <40 45>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               |CTRL | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   | RALT |

            bindings = <
&kp ESC    &kp N1          &kp N2          &kp N3       &kp N4                  &kp N5                                     &kp N6           &kp N7                  &kp N8       &kp N9           &kp N0                   &kp GRAVE
&kp TAB    &kp Q           &kp W           &kp E        &kp R                   &kp T                                      &kp Y            &kp U                   &kp I        &kp O            &kp P                    &kp MINUS
&kp LCTRL  &mt LEFT_GUI A  &mt LEFT_ALT S  &mt LCTRL D  &shift_mod_tap LSHFT F  &kp G                                      &kp H            &shift_mod_tap RSHFT J  &mt RCTRL K  &mt RIGHT_ALT L  &mt RIGHT_GUI SEMICOLON  &kp SQT
&kp LSHFT  &kp Z           &kp X           &kp C        &kp V                   &kp B        &kp C_PLAY_PAUSE    &kp RBKT  &kp N            &kp M                   &kp COMMA    &kp DOT          &kp FSLH                 &kp RSHFT
                           &kp LCTRL       &kp LALT     &lt 3 BACKSPACE         &lt 1 SPACE  &kp SPACE           &kp RET   &lt 2 BACKSPACE  &kp BSPC                &kp RGUI     &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&bt BT_CLR  &bt BT_SEL 0              &bt BT_SEL 1          &bt BT_SEL 2    &bt BT_SEL 3                      &bt BT_SEL 4                    &trans         &trans                          &trans                      &trans                           &trans                   &trans
&trans      &trans                    &kp SEMICOLON         &kp EQUAL       &kp PERCENT                       &trans                          &kp PAGE_UP    &kp CARET                       &kp LBKT                    &kp RBKT                         &kp DOLLAR               &trans
&trans      &mt LEFT_GUI EXCLAMATION  &mt LEFT_ALT AT_SIGN  &mt LCTRL HASH  &shift_mod_tap LEFT_SHIFT DOLLAR  &trans                          &kp PAGE_DOWN  &shift_mod_tap RSHFT AMPERSAND  &mt RCTRL LEFT_PARENTHESIS  &mt RIGHT_ALT RIGHT_PARENTHESIS  &mt RIGHT_GUI BACKSLASH  &kp TILDE
&trans      &trans                    &trans                &kp GRAVE       &kp SINGLE_QUOTE                  &trans        &trans    &trans  &trans         &kp ASTRK                       &kp LS(LBRC)                &kp LS(RBRC)                     &kp FSLH                 &kp PIPE
                                      &trans                &trans          &trans                            &trans        &trans    &trans  &trans         &trans                          &trans                      &trans
            >;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&trans     &trans           &trans           &trans        &trans                    &trans                    &trans         &trans     &trans            &trans           &trans      &trans
&kp GRAVE  &trans           &trans           &trans        &trans                    &trans                    &kp PAGE_UP    &kp CARET  &kp LEFT_BRACKET  &kp RBKT         &kp DOLLAR  &trans
&kp F1     &mt LEFT_GUI F2  &mt LEFT_ALT F3  &mt LCTRL F4  &shift_mod_tap LSHIFT F5  &trans                    &kp PAGE_DOWN  &kp LEFT   &kp DOWN          &kp UP           &kp RIGHT   &trans
&trans     &trans           &trans           &trans        &trans                    &trans  &trans    &trans  &kp KP_PLUS    &kp ASTRK  &kp LEFT_BRACE    &kp RIGHT_BRACE  &trans      &kp BSLH
                            &trans           &trans        &trans                    &trans  &trans    &trans  &trans         &trans     &trans            &trans
            >;
        };

        num_fn_layer {
            bindings = <
&ext_power EP_TOG  &ext_power EP_ON  &ext_power EP_OFF  &trans         &trans                     &trans                     &trans  &trans                          &kp KP_DIVIDE  &kp KP_ASTERISK         &trans                 &trans
&kp F1             &kp F2            &kp F3             &kp F4         &kp F5                     &kp F6                     &trans  &kp N7                          &kp N8         &kp N9                  &kp MINUS              &trans
&kp F7             &mt LEFT_GUI F8   &mt LEFT_ALT F9    &mt LCTRL F10  &shift_mod_tap LSHIFT F11  &kp F12                    &trans  &shift_mod_tap RSHIFT NUMBER_4  &mt RCTRL N5   &mt RIGHT_ALT NUMBER_6  &mt RIGHT_GUI KP_PLUS  &trans
&trans             &trans            &trans             &trans         &trans                     &trans   &trans    &trans  &kp N0  &kp N1                          &kp N2         &kp N3                  &trans                 &trans
                                     &trans             &trans         &trans                     &trans   &trans    &trans  &trans  &kp COMMA                       &kp DOT        &trans
            >;
        };
    };
};
